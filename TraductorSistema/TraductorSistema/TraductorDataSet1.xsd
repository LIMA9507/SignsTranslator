<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TraductorDataSet1" targetNamespace="http://tempuri.org/TraductorDataSet1.xsd" xmlns:mstns="http://tempuri.org/TraductorDataSet1.xsd" xmlns="http://tempuri.org/TraductorDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TraductorConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TraductorConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.SignsTranslator.Properties.Settings.GlobalReference.Default.TraductorConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AbecedarioTableAdapter" GeneratorDataComponentClassName="AbecedarioTableAdapter" Name="Abecedario" UserDataComponentName="AbecedarioTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TraductorConnectionString (Settings)" DbObjectName="Traductor.dbo.Abecedario" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Abecedario] WHERE (([nombre] = @Original_nombre) AND ((@IsNull_ruta = 1 AND [ruta] IS NULL) OR ([ruta] = @Original_ruta)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_nombre" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="nombre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ruta" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ruta" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ruta" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ruta" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Abecedario] ([nombre], [ruta]) VALUES (@nombre, @ruta);
SELECT nombre, ruta FROM Abecedario WHERE (nombre = @nombre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@nombre" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="nombre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ruta" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ruta" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT nombre, ruta FROM dbo.Abecedario</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Abecedario] SET [nombre] = @nombre, [ruta] = @ruta WHERE (([nombre] = @Original_nombre) AND ((@IsNull_ruta = 1 AND [ruta] IS NULL) OR ([ruta] = @Original_ruta)));
SELECT nombre, ruta FROM Abecedario WHERE (nombre = @nombre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@nombre" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="nombre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ruta" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ruta" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_nombre" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="nombre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ruta" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ruta" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ruta" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ruta" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="nombre" DataSetColumn="nombre" />
              <Mapping SourceColumn="ruta" DataSetColumn="ruta" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LoginTableAdapter" GeneratorDataComponentClassName="LoginTableAdapter" Name="Login" UserDataComponentName="LoginTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TraductorConnectionString (Settings)" DbObjectName="Traductor.dbo.Login" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Login] WHERE (([idLog] = @Original_idLog) AND ([usuario] = @Original_usuario) AND ([contraseña] = @Original_contraseña) AND ((@IsNull_palabraSec = 1 AND [palabraSec] IS NULL) OR ([palabraSec] = @Original_palabraSec)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idLog" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLog" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_usuario" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="usuario" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_contraseña" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="contraseña" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_palabraSec" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="palabraSec" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_palabraSec" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="palabraSec" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Login] ([usuario], [contraseña], [palabraSec]) VALUES (@usuario, @contraseña, @palabraSec);
SELECT idLog, usuario, contraseña, palabraSec FROM Login WHERE (idLog = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@usuario" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="usuario" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@contraseña" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="contraseña" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@palabraSec" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="palabraSec" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idLog, usuario, contraseña, palabraSec FROM dbo.Login</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Login] SET [usuario] = @usuario, [contraseña] = @contraseña, [palabraSec] = @palabraSec WHERE (([idLog] = @Original_idLog) AND ([usuario] = @Original_usuario) AND ([contraseña] = @Original_contraseña) AND ((@IsNull_palabraSec = 1 AND [palabraSec] IS NULL) OR ([palabraSec] = @Original_palabraSec)));
SELECT idLog, usuario, contraseña, palabraSec FROM Login WHERE (idLog = @idLog)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@usuario" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="usuario" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@contraseña" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="contraseña" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@palabraSec" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="palabraSec" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idLog" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idLog" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_usuario" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="usuario" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_contraseña" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="contraseña" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_palabraSec" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="palabraSec" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_palabraSec" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="palabraSec" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idLog" ColumnName="idLog" DataSourceName="Traductor.dbo.Login" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idLog" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idLog" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idLog" DataSetColumn="idLog" />
              <Mapping SourceColumn="usuario" DataSetColumn="usuario" />
              <Mapping SourceColumn="contraseña" DataSetColumn="contraseña" />
              <Mapping SourceColumn="palabraSec" DataSetColumn="palabraSec" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PalabrasTableAdapter" GeneratorDataComponentClassName="PalabrasTableAdapter" Name="Palabras" UserDataComponentName="PalabrasTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TraductorConnectionString (Settings)" DbObjectName="Traductor.dbo.Palabras" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Palabras] WHERE (([id] = @Original_id) AND ([palabra] = @Original_palabra))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_palabra" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="palabra" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Palabras] ([palabra], [ruta]) VALUES (@palabra, @ruta);
SELECT id, palabra, ruta FROM Palabras WHERE (id = SCOPE_IDENTITY()) ORDER BY palabra</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@palabra" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="palabra" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@ruta" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="ruta" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        id, palabra, ruta
FROM            Palabras
ORDER BY palabra</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Palabras] SET [palabra] = @palabra, [ruta] = @ruta WHERE (([id] = @Original_id) AND ([palabra] = @Original_palabra));
SELECT id, palabra, ruta FROM Palabras WHERE (id = @id) ORDER BY palabra</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@palabra" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="palabra" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@ruta" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="ruta" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_palabra" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="palabra" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="Traductor.dbo.Palabras" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="palabra" DataSetColumn="palabra" />
              <Mapping SourceColumn="ruta" DataSetColumn="ruta" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TraductorDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="TraductorDataSet1" msprop:Generator_UserDSName="TraductorDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Abecedario" msprop:Generator_TableClassName="AbecedarioDataTable" msprop:Generator_TableVarName="tableAbecedario" msprop:Generator_RowChangedName="AbecedarioRowChanged" msprop:Generator_TablePropName="Abecedario" msprop:Generator_RowDeletingName="AbecedarioRowDeleting" msprop:Generator_RowChangingName="AbecedarioRowChanging" msprop:Generator_RowEvHandlerName="AbecedarioRowChangeEventHandler" msprop:Generator_RowDeletedName="AbecedarioRowDeleted" msprop:Generator_RowClassName="AbecedarioRow" msprop:Generator_UserTableName="Abecedario" msprop:Generator_RowEvArgName="AbecedarioRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="nombre" msprop:Generator_ColumnVarNameInTable="columnnombre" msprop:Generator_ColumnPropNameInRow="nombre" msprop:Generator_ColumnPropNameInTable="nombreColumn" msprop:Generator_UserColumnName="nombre">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ruta" msprop:Generator_ColumnVarNameInTable="columnruta" msprop:Generator_ColumnPropNameInRow="ruta" msprop:Generator_ColumnPropNameInTable="rutaColumn" msprop:Generator_UserColumnName="ruta" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="70" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Login" msprop:Generator_TableClassName="LoginDataTable" msprop:Generator_TableVarName="tableLogin" msprop:Generator_RowChangedName="LoginRowChanged" msprop:Generator_TablePropName="Login" msprop:Generator_RowDeletingName="LoginRowDeleting" msprop:Generator_RowChangingName="LoginRowChanging" msprop:Generator_RowEvHandlerName="LoginRowChangeEventHandler" msprop:Generator_RowDeletedName="LoginRowDeleted" msprop:Generator_RowClassName="LoginRow" msprop:Generator_UserTableName="Login" msprop:Generator_RowEvArgName="LoginRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idLog" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidLog" msprop:Generator_ColumnPropNameInRow="idLog" msprop:Generator_ColumnPropNameInTable="idLogColumn" msprop:Generator_UserColumnName="idLog" type="xs:int" />
              <xs:element name="usuario" msprop:Generator_ColumnVarNameInTable="columnusuario" msprop:Generator_ColumnPropNameInRow="usuario" msprop:Generator_ColumnPropNameInTable="usuarioColumn" msprop:Generator_UserColumnName="usuario">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="contraseña" msprop:Generator_ColumnVarNameInTable="columncontraseña" msprop:Generator_ColumnPropNameInRow="contraseña" msprop:Generator_ColumnPropNameInTable="contraseñaColumn" msprop:Generator_UserColumnName="contraseña">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="palabraSec" msprop:Generator_ColumnVarNameInTable="columnpalabraSec" msprop:Generator_ColumnPropNameInRow="palabraSec" msprop:Generator_ColumnPropNameInTable="palabraSecColumn" msprop:Generator_UserColumnName="palabraSec" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Palabras" msprop:Generator_TableClassName="PalabrasDataTable" msprop:Generator_TableVarName="tablePalabras" msprop:Generator_RowChangedName="PalabrasRowChanged" msprop:Generator_TablePropName="Palabras" msprop:Generator_RowDeletingName="PalabrasRowDeleting" msprop:Generator_RowChangingName="PalabrasRowChanging" msprop:Generator_RowEvHandlerName="PalabrasRowChangeEventHandler" msprop:Generator_RowDeletedName="PalabrasRowDeleted" msprop:Generator_RowClassName="PalabrasRow" msprop:Generator_UserTableName="Palabras" msprop:Generator_RowEvArgName="PalabrasRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="palabra" msprop:Generator_ColumnVarNameInTable="columnpalabra" msprop:Generator_ColumnPropNameInRow="palabra" msprop:Generator_ColumnPropNameInTable="palabraColumn" msprop:Generator_UserColumnName="palabra">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ruta" msprop:Generator_ColumnVarNameInTable="columnruta" msprop:Generator_ColumnPropNameInRow="ruta" msprop:Generator_ColumnPropNameInTable="rutaColumn" msprop:Generator_UserColumnName="ruta" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Abecedario" />
      <xs:field xpath="mstns:nombre" />
    </xs:unique>
    <xs:unique name="Login_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Login" />
      <xs:field xpath="mstns:idLog" />
    </xs:unique>
    <xs:unique name="Palabras_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Palabras" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
</xs:schema>